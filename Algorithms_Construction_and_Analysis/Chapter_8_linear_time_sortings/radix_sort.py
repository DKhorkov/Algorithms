"""
Radix sort или же поразрядная сортировка - это сортировка за линейное время, скорость которой O(d(n + k)), где
d - это максимальная длина числа во входном массиве, n - количество элементов во входном массиве, а k - система
счисления (как правило 10).

В практических реализациях поразрядная сортировка часто работает быстрее, чем другие алгоритмы сортировки
на основе сравнения, такие как быстрая сортировка или сортировка слиянием, для больших наборов данных,
особенно когда ключи содержат много цифр. Однако его временная сложность растет линейно с увеличением количества цифр,
поэтому он не так эффективен для небольших наборов данных.

Поразрядная сортировка также требует O(n + k) памяти, где n — количество элементов, а k — основание системы счисления.
Эти затраты памяти возникают из-за необходимости создавать сегменты для каждого цифрового значения и
копировать элементы обратно в исходный массив после сортировки каждой цифры.
"""

from typing import List


class RadixSort:

    def __init__(self, arr: List[int]) -> None:
        self._arr: List[int] = arr

        self._max_digits: int = max([len(str(num)) for num in self._arr])
        self._k: int = 10  # Десятичная система счисления

    def sort(self) -> List[int]:
        # Совершаем устойчиую сортировку для каждого разряда на основе максимального числа во входном массиве
        for i in range(self._max_digits):
            self._counting_sort(power=i)

        return self._arr

    def _counting_sort(self, power: int) -> None:
        # Модернизируем временный массив для целей поразрядной сортировки
        temp_arr: List[List[int]] = [[] for _ in range(self._k)]

        """
        Сначала находим цифру, соответствующую текущему разряду, добавляем число в подмассив, соответствующий 
        полученному разряду.
        """
        for num in self._arr:
            digit = (num // self._k ** power) % self._k
            temp_arr[digit].append(num)

        # Переписываем входной массив отсортированными по текущему разряду числами
        self._arr = [num for inner_arr in temp_arr for num in inner_arr]


if __name__ == '__main__':
    array: List[int] = [5, 12, 312, 1, 239234, 1000]
    sorted_array: List[int] = RadixSort(arr=array).sort()
    print(sorted_array)
